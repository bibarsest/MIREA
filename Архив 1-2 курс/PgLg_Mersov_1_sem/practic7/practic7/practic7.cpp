//34-24=10
//вариант 10, до вечера пятницы. Задача: В строке s определить символ начала n-го слова.

#include <iostream>
#include <string.h>
#include "stdio.h"
#include <locale.h>
int main()
{
    setlocale(LC_ALL, "Rus");
    int n_prog; // номер программы стандарт/адресы (1-2)
start:int i = 0;
    int n_word; // начало какого слова надо найти (номер слова)
    int k = 1; // счетчик пробелов для опознавания слов
    printf("Выберите метод работы программы, где \n1 - традиционная обработка\n2 - использование адресной арифметики\n");
    scanf_s("%d", &n_prog);
    char string1[1000];
    char *pstr = string1; // указатель на строку
    printf("Введите предложение (строка): ");
    gets_s(string1); // пропуск
    gets_s(string1, 1000); // получаю  строку   
    switch (n_prog)
    {
    case 1: // традиционная обработка массива
        printf("Номер слова: ");
        scanf_s("%d", &n_word);
        if (n_word == 1) { printf("Позиция = %d, элемент |%c|\n", i + 1, string1[i]); break; };
        for (i = 0; i < strlen(string1); i++)  
        {
            if (string1[0] == ' ' or (string1[i] == ' ' && string1[i+1] == ' ')) 
            {
                printf("error 22\n");
                goto start;
            };
            if (string1[i] == ' ') { k++; }; // +к счетчику, если найден пробел
            if (k == n_word) { printf("Позиция = %d, элемент |%c|\n", i+2, string1[i+1]); k++; }; // если кол-во пробелов равняется
            // номеру слова, значит следующим символом будет начало слова. Т.к. начинаем отсчет с нуля, то i+2. k++ для выхода
        }
        if (n_word >= k) { printf("error: недопустимая область"); };
        break;
    case 2: // метод адресной арифметики
        printf("Номер слова: ");
        scanf_s("%d", &n_word);
        if (n_word == 1) { printf("Позиция = %d, элемент |%c|\n", i + 1, *(pstr+i)); break; };
        for (i = 0; i < strlen(string1); i++)
        {
            if (*pstr == ' ' or (*(pstr+i) == ' ' && *(pstr+i+1) == ' '))
            {
                printf("error 22\n");
                goto start;
            };
            if (*(pstr+i) == ' ') { k++; }; // +к счетчику, если найден пробел
            if (k == n_word) { printf("Позиция = %d, элемент |%c|\n", i + 2, *(pstr+i+1)); k++; }; // если кол-во пробелов равняется
            // номеру слова, значит следующим символом будет начало слова. Т.к. начинаем отсчет с нуля, то i+2. k++ для выхода
        }
        if (n_word >= k) { printf("error: недопустимая область"); };
        break;
    default:
        printf("error\n");
        goto start;

    }
}

// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
